

@model IEnumerable<Mijem_test_app.Models.ReservationDate>

@{
    ViewBag.Title = "Confirm Location";
    Layout = "~/Views/Shared/_LayoutConfirmReservation.cshtml";
}

<div class="w3-container row" style="background-color:#fff;padding-top: 15px; margin-bottom: 10px;">
    <div class="column">
        <h2 style="color: red; font-size:2em">Confirm location</h2>
    </div>
    <div class="column">
        <p>
            Lorem ipsum dolor sit amet, consectetur adipisicing elit,
            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        </p>
    </div>
    <div class="column">
        <input type="button" value="Reservation List" class="btn btn-primary column_button" onclick="@("window.location.href='" + @Url.Action("Index", "ReservationDates") + "'");" />
    </div>
</div>

<style>
    /*the container must be positioned relative:*/
    .custom-select {
        position: relative;
        font-family: Arial;
    }

        .custom-select select {
            display: none; /*hide original SELECT element:*/
        }

    .select-selected {
        /*to not display any initial options*/
        background-color: rgba(0, 0, 0, 0);
    }
        /*style the arrow inside the select element:*/
        .select-selected:after {
            position: absolute;
            content: "";
            top: 14px;
            right: 10px;
            width: 0;
            height: 0;
            border: 6px solid transparent;
            border-color: rgba(0, 0, 0, 0);
        }
        /*point the arrow upwards when the select box is open (active):*/
        .select-selected.select-arrow-active:after {
            border-color: rgba(0, 0, 0, 0);
            top: 7px;
        }
    /*style the items (options), including the selected item:*/
    .select-items div, .select-selected {
        color: #ffffff;
        padding: 8px 16px;
        border: 1px solid transparent;
        border-color: rgba(0, 0, 0, 0);
        cursor: pointer;
        user-select: none;
    }
    /*style items (options):*/
    .select-items {
        position: absolute;
        background-color: DodgerBlue;
        top: 100%;
        left: 0;
        right: 0;
        z-index: 99;
    }
    /*hide the items when the select box is closed:*/
    .select-hide {
        display: none;
    }

    .select-items div:hover, .same-as-selected {
        background-color: rgba(0, 0, 0, 0.1);
    }
</style>


<h2>Selection location</h2>
    @using (Html.BeginForm("Save", "ReservationDates", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "replaceContent()" }))
    {
        @*<div class="custom-select" style="width: 200px;">*@
            <select>
                @foreach (var name in Model)
                {
                    <option name="@name.Reservation.Name" value="@name.Reservation.Name">@name.Reservation.Name</option>
                    }
            </select>
        @*</div>*@
        <button style="float:right; background: red;" class="btn btn-success">Save</button>
    }
    <!--surround the select box with a "custom-select" DIV element. Remember to set the width:-->


    <script>
        var x, i, j, selElmnt, a, b, c;
        /*look for any elements with the class "custom-select":*/
        x = document.getElementsByClassName("custom-select");
        for (i = 0; i < x.length; i++) {
            selElmnt = x[i].getElementsByTagName("select")[0];
            /*for each element, create a new DIV that will act as the selected item:*/
            a = document.createElement("DIV");
            a.setAttribute("class", "select-selected");
            a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
            x[i].appendChild(a);
            /*for each element, create a new DIV that will contain the option list:*/
            b = document.createElement("DIV");
            b.setAttribute("class", "select-items select-hide");
            for (j = 0; j < selElmnt.length; j++) {
                /*for each option in the original select element,
                create a new DIV that will act as an option item:*/
                c = document.createElement("DIV");
                c.innerHTML = selElmnt.options[j].innerHTML;
                c.addEventListener("click", function (e) {
                    /*when an item is clicked, update the original select box,
                    and the selected item:*/
                    var y, i, k, s, h;
                    s = this.parentNode.parentNode.getElementsByTagName("select")[0];
                    h = this.parentNode.previousSibling;
                    for (i = 0; i < s.length; i++) {
                        if (s.options[i].innerHTML == this.innerHTML) {
                            s.selectedIndex = i;
                            h.innerHTML = this.innerHTML;
                            y = this.parentNode.getElementsByClassName("same-as-selected");
                            for (k = 0; k < y.length; k++) {
                                y[k].removeAttribute("class");
                            }
                            this.setAttribute("class", "same-as-selected");
                            break;
                        }
                    }
                    h.click();
                });
                b.appendChild(c);
            }
            x[i].appendChild(b);
            a.addEventListener("click", function (e) {
                /*when the select box is clicked, close any other select boxes,
                and open/close the current select box:*/
                e.stopPropagation();
                closeAllSelect(this);
                this.nextSibling.classList.toggle("select-hide");
                this.classList.toggle("select-arrow-active");
            });
        }
        function closeAllSelect(elmnt) {
            /*a function that will close all select boxes in the document,
            except the current select box:*/
            var x, y, i, arrNo = [];
            x = document.getElementsByClassName("select-items");
            y = document.getElementsByClassName("select-selected");
            for (i = 0; i < y.length; i++) {
                if (elmnt == y[i]) {
                    arrNo.push(i)
                } else {
                    y[i].classList.remove("select-arrow-active");
                }
            }
            for (i = 0; i < x.length; i++) {
                if (arrNo.indexOf(i)) {
                    x[i].classList.add("select-hide");
                }
            }
        }
        /*if the user clicks anywhere outside the select box,
        then close all select boxes:*/
        document.addEventListener("click", closeAllSelect);

        //replaceContent = () => {
        //    var x = document.getElementById('aaa');
        //    alert(x);
        //}
    </script>




